
Group by:

1. Contare quanti iscritti ci sono stati ogni anno 

SELECT YEAR(`enrolment_date`) AS year, 
COUNT(*) AS `number_of_members`
FROM `students`
GROUP BY year

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio 

SELECT `office_address` AS `address`,
COUNT(*) AS `number_of_teachers`
FROM `teachers`
GROUP BY `address`


3. Calcolare la media dei voti di ogni appello d'esame 

SELECT `exam_id`,
AVG(`vote`) AS `average_vote`
FROM `exam_student`
GROUP BY `exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT `department_id`, 
COUNT(*) AS `number_of_degrees`
FROM `degrees`
GROUP BY `department_id`;


Join:


1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia 

SELECT `students`.*,
 `degrees`.`name`
FROM `students`
JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze 

SELECT `degrees`.*, 
`departments`.`name`, 
`departments`.`id`
FROM `degrees` 
JOIN `departments` ON `department_id` = `departments`.`id`
WHERE `degrees`.`level` = 'magistrale'
AND `departments`.`name` = 'Dipartimento di Neuroscienze'


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44) 

SELECT `degrees`.*,
`teachers`.`name`,
`teachers`.`surname`
FROM `degrees`
JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
WHERE `course_teacher`.`teacher_id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome 

SELECT 
`students`.`id`,
`students`.`name` AS `student_name`,
`students`.`surname` AS `student_surname`,
`students`.`date_of_birth`,
`students`.`fiscal_code`,
`students`.`enrolment_date`,
`students`.`registration_number`,
`students`.`email`,
`degrees`.`name` AS `degree_name`,
`departments`.`name` AS `department_name`
FROM `students`
JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
ORDER BY `students`.`surname`, `students`.`name`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti 

SELECT 
`degrees`.`name` AS `degree_name`,
`degrees`.`level`,
`courses`.`cfu`,
`teachers`.`name` AS `teacher_name`,
`teachers`.`surname` AS `teacher_surname`,
`teachers`.`email` AS `teacher_email`
FROM `degrees`
JOIN `courses` ON `courses`.`degree_id` = `degrees`.`id`
JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54) 


SELECT
`teachers`.*,
`departments`.`name`
FROM `teachers`
JOIN `course_teacher` ON `course_teacher`.`teacher_id` = `teachers`.`id`
JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica';

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.

